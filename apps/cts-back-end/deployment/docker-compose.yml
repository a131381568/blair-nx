services:
  postgres:
    container_name: cts_postgres
    image: postgres:16.4
    env_file:
      - .env.production
    environment:
      PGDATA: /data/postgres
    volumes:
      # - postgres:/data/postgres
      - ./backend/tmp:/tmp
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - '5432:5432'
    networks:
      - common
    restart: unless-stopped

  pgadmin:
    container_name: cts_pgadmin
    image: dpage/pgadmin4:latest
    env_file:
      - .env.production
    environment:
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
      - ./backend/tmp:/tmp
    ports:
      - '5050:80'
    networks:
      - common
    restart: unless-stopped

  nginx:
    container_name: cts_nginx
    image: nginx
    restart: unless-stopped
    volumes:
      - ./frontend:/etc/nginx/html
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - 80:80
      - 443:443
    env_file:
      - .env.production
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      - node
    networks:
      - common

  node:
    container_name: cts_node
    restart: always
    build:
      context: ./backend
    env_file:
      - .env.production
    expose:
      - "3000"
    links:
      - postgres
    ports:
      - "3000:3000"
    networks: 
      - common
    depends_on:
      - postgres
    tty: true
    stdin_open: true

networks:
  common:
    driver: bridge

volumes:
  postgres:
  pgadmin:
