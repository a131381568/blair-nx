generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model AboutInfo {
  visual     String? @db.VarChar
  slogan     String? @db.VarChar
  philosophy String?
  quote      String?
  epilogue   String?
  aboutId    Int     @id @default(autoincrement()) @map("about_id")

  @@map("about_info")
}

model FacilitiesList {
  facilitiesTitle       String?  @map("facilities_title") @db.VarChar
  facilitiesDescription String?  @map("facilities_description")
  facilitiesImage       String?  @map("facilities_image") @db.VarChar
  facilitiesLink        String?  @map("facilities_link") @db.VarChar
  published             Boolean?
  facilitiesNanoId      String   @unique @default(dbgenerated("nanoid(10)")) @db.VarChar(10)
  facilitiesOrderId     Int      @id @default(autoincrement()) @map("facilities_orderid")

  @@map("facilities_list")
}

model ObservatoriesList {
  observatoryNanoId       String   @unique @default(dbgenerated("nanoid(10)")) @db.VarChar(10)
  observatoryCategoryName String?  @map("observatory_category_name") @db.VarChar
  observatoryCategoryId   String?  @map("observatory_category_id") @db.VarChar
  observatoryPostContent  String?  @map("observatory_post_content")
  published               Boolean?
  observatoryOrderId      Int      @id @default(autoincrement()) @map("observatory_orderid")

  @@map("observatories_list")
}

model PageInfo {
  pageTitle    String? @map("page_title") @db.VarChar
  subPageTitle String? @map("sub_page_title") @db.VarChar
  pageRoute    String? @map("page_route") @db.VarChar
  pageId       Int     @id @unique(map: "unique_page_id") @default(autoincrement()) @map("page_id")
  pageNanoId   String  @unique @default(dbgenerated("nanoid(10)")) @db.VarChar(10)

  @@map("page_info")
}

model PostCategories {
  postCategoryName    String?   @map("post_category_name") @db.VarChar
  postCategoryId      String?   @map("post_category_id") @db.VarChar
  published           Boolean?
  postCategoryNanoId  String    @unique @default(dbgenerated("nanoid(10)")) @map("post_category_nanoid") @db.VarChar(10)
  sciences            Science[] @relation("CategorySciences")
  postCategoryOrderId Int       @id @default(autoincrement()) @map("post_category_orderid")

  @@map("post_categories")
}

model Science {
  title              String?         @db.VarChar
  updateTime         DateTime?       @map("updatetime") @db.Date
  content            String?
  image              String?         @db.VarChar
  published          Boolean?
  postNanoId         String          @unique @default(dbgenerated("nanoid(10)")) @db.VarChar(10)
  postCategoryNanoId String?         @map("post_category_nanoid") @db.VarChar(10)
  quoteCat           PostCategories? @relation("CategorySciences", fields: [postCategoryNanoId], references: [postCategoryNanoId])
  orderId            Int             @id @default(autoincrement()) @map("orderid")

  @@index([postCategoryNanoId])
  @@map("science")
}

model StargazingList {
  stargazingTitle       String?  @map("stargazing_title") @db.VarChar
  stargazingLatitude    Decimal? @map("stargazing_latitude") @db.Decimal(18, 15)
  stargazingLongitude   Decimal? @map("stargazing_longitude") @db.Decimal(18, 15)
  stargazingImage       String?  @map("stargazing_image") @db.VarChar
  stargazingDescription String?  @map("stargazing_description")
  stargazingAddress     String?  @map("stargazing_address") @db.VarChar
  published             Boolean?
  stargazingNanoId      String   @unique @default(dbgenerated("nanoid(10)")) @db.VarChar(10)
  stargazingOrderId     Int      @id @default(autoincrement()) @map("stargazing_orderid")

  @@map("stargazing_list")
}

model Users {
  name     String? @db.VarChar
  email    String? @db.VarChar
  password String? @db.VarChar
  nanoId   String  @unique @default(dbgenerated("nanoid(10)")) @db.VarChar(10)
  orderId  Int     @id @default(autoincrement()) @map("orderid")

  @@map("users")
}
