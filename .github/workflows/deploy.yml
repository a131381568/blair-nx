name: Deploy to Railway

# 添加並發控制
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches: [production]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Set up environment variables
        run: echo "${{ secrets.ENV_PRODUCTION }}" > .env
          
      - name: ctsb Generate Prisma & deploy
        run: |
          pnpm exec nx prisma:g cts-back-end
          pnpm exec nx deploy cts-back-end

      - name: cp dist content
        run: |
          cp .env dist/ctsb/          
          cp apps/cts-front-end/deployment/* dist/ctsf/

      - name: Setup Railway CLI
        run: pnpm install -g @railway/cli

      - name: Deploy to Railway
        run: |
          (cd dist/ctsb && RAILWAY_TOKEN=${{ secrets.RAILWAY_TOKEN }} railway up -s ${{ secrets.RAILWAY_SERVICE_CTSB_ID }})
          BACKEND_STATUS=$?

          (cd dist/ctsf && RAILWAY_TOKEN=${{ secrets.RAILWAY_TOKEN }} railway up -s ${{ secrets.RAILWAY_SERVICE_CTSF_ID }})
          FRONTEND_STATUS=$?
          
          if [ $BACKEND_STATUS -ne 0 ]; then
            echo "Backend deployment failed"
            railway logs --service ${{ secrets.RAILWAY_SERVICE_CTSB_ID }}
          fi
          
          if [ $FRONTEND_STATUS -ne 0 ]; then
            echo "Frontend deployment failed"
            railway logs --service ${{ secrets.RAILWAY_SERVICE_CTSF_ID }}
          fi
          
          [ $BACKEND_STATUS -eq 0 ] && [ $FRONTEND_STATUS -eq 0 ]
