name: Deploy to Railway

on:
  push:
    branches: [production]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.17.0'
          
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: '8.15.3'

      # 添加緩存以加速構建
      - name: Cache pnpm modules
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Set up environment variables
        run: echo "${{ secrets.ENV_PRODUCTION }}" > .env
          
      - name: Generate Prisma Client & Build Projects
        run: |
          pnpm exec nx prisma:g cts-back-end
          pnpm exec nx deploy cts-back-end

      - name: Prepare deployment files
        run: |
          cp .env dist/ctsb/          
          cp apps/cts-front-end/deployment/* dist/ctsf/

      # Railway CLI 設定
      - name: Install Railway CLI
        run: npm install -g @railway/cli

      - name: Verify Railway Authentication
        run: |
          echo "Verifying Railway CLI installation..."
          railway version
          echo "Authenticating with Railway..."
          echo "$RAILWAY_TOKEN" | railway login
          railway whoami

      # 後端部署
      - name: Deploy Backend
        id: deploy-backend
        working-directory: dist/ctsb
        run: |
          echo "Deploying backend service..."
          railway link ${{ secrets.RAILWAY_PROJECT_ID }} --environment production
          railway up --service ${{ secrets.RAILWAY_SERVICE_CTSB_ID }}
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}

     # 前端部署
      - name: Deploy Frontend
        id: deploy-frontend
        working-directory: dist/ctsf
        run: |
          echo "Deploying frontend service..."
          railway link ${{ secrets.RAILWAY_PROJECT_ID }} --environment production
          railway up --service ${{ secrets.RAILWAY_SERVICE_CTSF_ID }}
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}

      # 部署狀態檢查
      - name: Check deployment status
        if: steps.deploy-backend.outcome == 'failure' || steps.deploy-frontend.outcome == 'failure'
        run: |
          if [ "${{ steps.deploy-backend.outcome }}" == "failure" ]; then
            echo "Backend deployment failed"
            railway logs --service ${{ secrets.RAILWAY_SERVICE_CTSB_ID }}
          fi
          if [ "${{ steps.deploy-frontend.outcome }}" == "failure" ]; then
            echo "Frontend deployment failed"
            railway logs --service ${{ secrets.RAILWAY_SERVICE_CTSF_ID }}
          fi
          exit 1

      # 等待部署生效
      - name: Wait for deployments
        run: |
          echo "Waiting for deployments to stabilize..."
          sleep 45  # 增加等待時間以確保服務完全啟動

      # 健康狀態檢查
      - name: Verify deployments
        run: |
          echo "Verifying backend deployment..."
          RETRY_COUNT=0
          MAX_RETRIES=3
          
          until $(curl --output /dev/null --silent --fail https://star-api.puraliena.com/api/health); do
            if [ ${RETRY_COUNT} -eq ${MAX_RETRIES} ]; then
              echo "Backend health check failed after ${MAX_RETRIES} attempts"
              exit 1
            fi
            RETRY_COUNT=$((RETRY_COUNT+1))
            echo "Retrying backend health check (${RETRY_COUNT}/${MAX_RETRIES})..."
            sleep 10
          done
          echo "Backend is healthy"
          
          echo "Verifying frontend deployment..."
          RETRY_COUNT=0
          until $(curl --output /dev/null --silent --fail https://star.puraliena.com); do
            if [ ${RETRY_COUNT} -eq ${MAX_RETRIES} ]; then
              echo "Frontend health check failed after ${MAX_RETRIES} attempts"
              exit 1
            fi
            RETRY_COUNT=$((RETRY_COUNT+1))
            echo "Retrying frontend health check (${RETRY_COUNT}/${MAX_RETRIES})..."
            sleep 10
          done
          echo "Frontend is healthy"
          
      # 最終狀態確認
      - name: Final deployment verification
        run: |
          echo "Checking final deployment status..."
          railway status
          echo "Deployment complete!"
